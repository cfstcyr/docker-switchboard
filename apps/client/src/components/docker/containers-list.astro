---

---

<astro-containers-list>
    <ul id="containers">
        <!-- populated dynamically -->
    </ul>
</astro-containers-list>

<script>
    import { WebSocketService } from '@/lib/services/ws-service';
    import type { DockerContainer } from '@/lib/types/docker';
    
    class ContainersList extends HTMLElement {
        connectedCallback() {
            const listEl = this.querySelector<HTMLUListElement>('#containers');

            if (!listEl) {
                console.error('ContainersList: No list element found');
                return;
            }

            WebSocketService.instance.subscribe('containers', (data) => {
                this.handleContainersUpdate(data, listEl);
            })
        }

        handleContainersUpdate(data: DockerContainer[], listEl: HTMLUListElement) {
            let i = 0;
            for (const container of data) {
                if (i < listEl.children.length) {
                    const li = listEl.children[i];
                    this.renderItem(container, li as HTMLLIElement);
                } else {
                    const li = document.createElement('li');
                    this.renderItem(container, li);
                    listEl.appendChild(li);
                }
                i++;
            }

            while (i < listEl.children.length) {
                listEl.removeChild(listEl.lastChild!);
            }
        }

        renderItem(container: DockerContainer, li: HTMLLIElement) {
            li.textContent = container.name;
            li.dataset.id = container.id;
        }
    }

    customElements.define('astro-containers-list', ContainersList);
</script>